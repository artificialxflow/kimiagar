// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  username    String   @unique
  password    String
  firstName   String?
  lastName    String?
  phoneNumber String?  @unique
  nationalId  String?  @unique
  bankAccount String?  // شماره شبا
  postalCode  String?  // کد پستی
  isVerified  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  wallets       Wallet[]
  transactions  Transaction[]
  orders        Order[]

  @@map("users")
}

model Wallet {
  id        String   @id @default(cuid())
  userId    String
  type      WalletType
  balance   Decimal  @default(0)
  currency  String   @default("IRR") // IRR for Rial, GOLD for Gold
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("wallets")
}

model Transaction {
  id          String            @id @default(cuid())
  userId      String
  walletId    String
  type        TransactionType
  amount      Decimal
  description String?
  status      TransactionStatus @default(PENDING)
  referenceId String?           // شماره مرجع تراکنش
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  wallet Wallet @relation(fields: [walletId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Order {
  id          String      @id @default(cuid())
  userId      String
  type        OrderType   // BUY or SELL
  productType ProductType // GOLD_18K, COIN_BAHAR, etc.
  amount      Decimal     // مقدار (گرم برای طلا، عدد برای سکه)
  price       Decimal     // قیمت واحد
  totalPrice  Decimal     // قیمت کل
  commission  Decimal     // کمیسیون
  status      OrderStatus @default(PENDING)
  isAutomatic Boolean     @default(false) // دستی یا اتوماتیک
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model Price {
  id          String      @id @default(cuid())
  productType ProductType
  buyPrice    Decimal     // قیمت خرید
  sellPrice   Decimal     // قیمت فروش
  margin      Decimal     @default(0) // حاشیه سود
  source      String      // منبع قیمت (API یا دستی)
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("prices")
}

model Commission {
  id          String      @id @default(cuid())
  productType ProductType
  buyRate     Decimal     // نرخ کمیسیون خرید (درصد)
  sellRate    Decimal     // نرخ کمیسیون فروش (درصد)
  minAmount   Decimal     // حداقل مبلغ
  maxAmount   Decimal     // حداکثر مبلغ
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("commissions")
}

model SystemSetting {
  id    String @id @default(cuid())
  key   String @unique
  value String
  type  String @default("string") // string, number, boolean, json

  @@map("system_settings")
}

enum WalletType {
  RIAL
  GOLD
}

enum TransactionType {
  DEPOSIT      // واریز
  WITHDRAW     // برداشت
  TRANSFER     // انتقال
  COMMISSION   // کمیسیون
  ORDER_PAYMENT // پرداخت سفارش
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}

enum OrderType {
  BUY
  SELL
}

enum ProductType {
  GOLD_18K     // طلای 18 عیار
  COIN_BAHAR   // سکه بهار آزادی
  COIN_NIM     // نیم سکه
  COIN_ROBE    // ربع سکه
}

enum OrderStatus {
  PENDING      // در انتظار
  CONFIRMED    // تایید شده
  PROCESSING   // در حال پردازش
  COMPLETED    // تکمیل شده
  CANCELLED    // لغو شده
  FAILED       // ناموفق
}
